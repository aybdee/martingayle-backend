const AutoscaleService = {"body":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"200":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CancelDeploy = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"deployId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the deploy"}},"required":["serviceId","deployId"]}]},"response":{"200":{"type":"object","required":["id"],"properties":{"id":{"type":"string"},"commit":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"},"createdAt":{"type":"string","format":"date-time"}}},"image":{"description":"Image information used when creating the deploy. Not present for Git-backed deploys","type":"object","properties":{"ref":{"description":"Image reference used when creating the deploy","type":"string"},"sha":{"description":"SHA that the image reference was resolved to when creating the deploy","type":"string"},"registryCredential":{"description":"Name of credential used to pull the image, if provided","type":"string"}}},"status":{"type":"string","enum":["created","build_in_progress","update_in_progress","live","deactivated","build_failed","update_failed","canceled","pre_deploy_in_progress","pre_deploy_failed"],"description":"`created` `build_in_progress` `update_in_progress` `live` `deactivated` `build_failed` `update_failed` `canceled` `pre_deploy_in_progress` `pre_deploy_failed`"},"trigger":{"type":"string","enum":["api","blueprint_sync","deploy_hook","deployed_by_render","manual","other","new_commit","rollback","service_resumed","service_updated"],"description":"`api` `blueprint_sync` `deploy_hook` `deployed_by_render` `manual` `other` `new_commit` `rollback` `service_resumed` `service_updated`"},"finishedAt":{"type":"string","format":"date-time"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CancelJob = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"jobId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the job"}},"required":["serviceId","jobId"]}]},"response":{"200":{"type":"object","required":["id","serviceId","startCommand","planId","createdAt"],"properties":{"id":{"type":"string","examples":["job-xxxxx"]},"serviceId":{"type":"string","examples":["srv-xxxxx"]},"startCommand":{"type":"string","examples":["echo 'hello world'"]},"planId":{"type":"string","examples":["plan-srv-004"]},"status":{"type":"string","examples":["succeeded"]},"createdAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"startedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"finishedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreateCustomDomain = {"body":{"type":"object","required":["name"],"properties":{"name":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"201":{"type":"array","items":{"type":"object","required":["id","name","domainType","publicSuffix","verificationStatus","createdAt","redirectForName"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"domainType":{"type":"string","enum":["apex","subdomain"],"description":"`apex` `subdomain`"},"publicSuffix":{"type":"string"},"redirectForName":{"type":"string"},"verificationStatus":{"type":"string","enum":["verified","unverified"],"description":"`verified` `unverified`"},"createdAt":{"type":"string","format":"date-time"},"server":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"402":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"409":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreateDeploy = {"body":{"type":"object","properties":{"clearCache":{"type":"string","enum":["clear","do_not_clear"],"default":"do_not_clear","description":"Defaults to \"do_not_clear\"\n\nDefault: `do_not_clear`"},"commitId":{"type":"string","description":"Specific ID of commit to deploy for a web service, defaults to latest commit. Not supported for Cron Job deploys."},"imageUrl":{"type":"string","description":"URL of the image to deploy for an image-backed service. The host, repository, and image name must match the currently configured image for the service."}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"201":{"type":"object","required":["id"],"properties":{"id":{"type":"string"},"commit":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"},"createdAt":{"type":"string","format":"date-time"}}},"image":{"description":"Image information used when creating the deploy. Not present for Git-backed deploys","type":"object","properties":{"ref":{"description":"Image reference used when creating the deploy","type":"string"},"sha":{"description":"SHA that the image reference was resolved to when creating the deploy","type":"string"},"registryCredential":{"description":"Name of credential used to pull the image, if provided","type":"string"}}},"status":{"type":"string","enum":["created","build_in_progress","update_in_progress","live","deactivated","build_failed","update_failed","canceled","pre_deploy_in_progress","pre_deploy_failed"],"description":"`created` `build_in_progress` `update_in_progress` `live` `deactivated` `build_failed` `update_failed` `canceled` `pre_deploy_in_progress` `pre_deploy_failed`"},"trigger":{"type":"string","enum":["api","blueprint_sync","deploy_hook","deployed_by_render","manual","other","new_commit","rollback","service_resumed","service_updated"],"description":"`api` `blueprint_sync` `deploy_hook` `deployed_by_render` `manual` `other` `new_commit` `rollback` `service_resumed` `service_updated`"},"finishedAt":{"type":"string","format":"date-time"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"409":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreateRegistryCredential = {"body":{"type":"object","required":["name","registry","username","authToken","ownerId"],"properties":{"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with"},"name":{"type":"string"},"username":{"type":"string"},"authToken":{"type":"string"},"ownerId":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"402":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"409":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreateService = {"body":{"type":"object","required":["type","name","ownerId"],"properties":{"type":{"type":"string","enum":["static_site","web_service","private_service","background_worker","cron_job"]},"name":{"type":"string"},"ownerId":{"type":"string"},"repo":{"type":"string","description":"Do not include the branch in the repo string. You can instead supply a 'branch' parameter.","examples":["https://github.com/render-examples/flask-hello-world"]},"autoDeploy":{"type":"string","enum":["yes","no"],"default":"yes","description":"Default: yes"},"branch":{"type":"string","description":"If left empty, this will fall back to the default branch of the repository"},"image":{"type":"object","required":["imagePath","ownerId"],"properties":{"ownerId":{"type":"string","description":"The ID of the owner for this image. This should match the owner of the service as well as the owner of any specified registry credential."},"registryCredentialId":{"type":"string","description":"Optional reference to the registry credential passed to the image repository to retrieve this image."},"imagePath":{"type":"string","description":"Path to the image used for this server (e.g docker.io/library/nginx:latest)."}}},"buildFilter":{"type":"object","required":["paths","ignoredPaths"],"properties":{"paths":{"type":"array","items":{"type":"string"}},"ignoredPaths":{"type":"array","items":{"type":"string"}}}},"rootDir":{"type":"string"},"envVars":{"type":"array","items":{"type":"object","oneOf":[{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}}},{"type":"object","required":["key","generateValue"],"properties":{"key":{"type":"string"},"generateValue":{"type":"boolean"}}}]}},"secretFiles":{"type":"array","items":{"type":"object","required":["name","content"],"properties":{"name":{"type":"string"},"content":{"type":"string"}}}},"serviceDetails":{"oneOf":[{"type":"object","properties":{"buildCommand":{"type":"string"},"headers":{"type":"array","items":{"type":"object","required":["path","name","value"],"properties":{"path":{"type":"string","description":"The request path to add the header to. Wildcards will cause headers to be applied to all matching paths.","examples":["/static/*"]},"name":{"type":"string","description":"Header name","examples":["Cache-Control"]},"value":{"type":"string","description":"Header value","examples":["public, max-age=604800"]}}}},"publishPath":{"type":"string","description":"Defaults to \"public\""},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","description":"Defaults to \"no\"\n\nDefault: `no`"},"routes":{"type":"array","items":{"type":"object","required":["type","source","destination"],"properties":{"type":{"type":"string","enum":["redirect","rewrite"]},"source":{"type":"string","examples":["/:bar/foo"]},"destination":{"type":"string","examples":["/foo/:bar"]},"priority":{"type":"integer","description":"Redirect and Rewrite Rules are applied in priority order starting at 0. Defaults to last in the priority list."}}}}}},{"type":"object","required":["runtime"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["name","mountPath"],"properties":{"name":{"type":"string"},"mountPath":{"type":"string"},"sizeGB":{"type":"integer","minimum":1,"description":"Defaults to 1"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place."},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"},"envSpecificDetails":{"oneOf":[{"type":"object","properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string","description":"Defaults to \"./Dockerfile\""},"registryCredentialId":{"type":"string"}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"}},"description":"Fields for native environment (runtime) services"}]},"healthCheckPath":{"type":"string"},"numInstances":{"type":"integer","minimum":1,"description":"Defaults to 1"},"plan":{"type":"string","enum":["starter","standard","pro","pro_plus","pro_max","pro_ultra"],"default":"starter","description":"Defaults to \"starter\"\n\nDefault: `starter`"},"preDeployCommand":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","description":"Defaults to \"no\"\n\nDefault: `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\nDefault: `oregon`"}}},{"type":"object","required":["runtime"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["name","mountPath"],"properties":{"name":{"type":"string"},"mountPath":{"type":"string"},"sizeGB":{"type":"integer","minimum":1,"description":"Defaults to 1"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place."},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"},"envSpecificDetails":{"oneOf":[{"type":"object","properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string","description":"Defaults to \"./Dockerfile\""},"registryCredentialId":{"type":"string"}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"}},"description":"Fields for native environment (runtime) services"}]},"numInstances":{"type":"integer","minimum":1,"default":1,"description":"Defaults to 1"},"plan":{"type":"string","enum":["starter","standard","pro","pro_plus","pro_max","pro_ultra"],"default":"starter","description":"Defaults to \"starter\"\n\nDefault: `starter`"},"preDeployCommand":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","description":"Defaults to \"no\"\n\nDefault: `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\nDefault: `oregon`"}}},{"type":"object","required":["runtime"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["name","mountPath"],"properties":{"name":{"type":"string"},"mountPath":{"type":"string"},"sizeGB":{"type":"integer","minimum":1,"description":"Defaults to 1"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place."},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"},"envSpecificDetails":{"oneOf":[{"type":"object","properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string","description":"Defaults to \"./Dockerfile\""},"registryCredentialId":{"type":"string"}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"}},"description":"Fields for native environment (runtime) services"}]},"numInstances":{"type":"integer","minimum":1,"default":1,"description":"Defaults to 1"},"plan":{"type":"string","enum":["starter","standard","pro","pro_plus","pro_max","pro_ultra"],"default":"starter","description":"Defaults to \"starter\"\n\nDefault: `starter`"},"preDeployCommand":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","description":"Defaults to \"no\"\n\nDefault: `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\nDefault: `oregon`"}}},{"type":"object","required":["runtime","schedule"],"properties":{"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place."},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"plan":{"type":"string","enum":["starter","standard","pro","pro_plus","pro_max","pro_ultra"],"default":"starter","description":"Defaults to \"starter\"\n\nDefault: `starter`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\nDefault: `oregon`"},"schedule":{"type":"string"}}}]}},"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"201":{"type":"object","properties":{"service":{"type":"object","required":["id","name","ownerId","type","createdAt","updatedAt","suspended","suspenders","autoDeploy","notifyOnFail","slug","serviceDetails","rootDir"],"properties":{"id":{"type":"string"},"autoDeploy":{"type":"string","enum":["yes","no"],"default":"yes","description":"`yes` `no`"},"branch":{"type":"string"},"buildFilter":{"type":"object","required":["paths","ignoredPaths"],"properties":{"paths":{"type":"array","items":{"type":"string"}},"ignoredPaths":{"type":"array","items":{"type":"string"}}}},"createdAt":{"type":"string","format":"date-time"},"environmentId":{"type":"string"},"imagePath":{"type":"string"},"name":{"type":"string"},"notifyOnFail":{"type":"string","enum":["default","notify","ignore"],"description":"`default` `notify` `ignore`"},"ownerId":{"type":"string"},"registryCredential":{"type":"object","required":["id","name"],"properties":{"id":{"type":"string"},"name":{"type":"string"}}},"repo":{"type":"string","examples":["https://github.com/render-examples/flask-hello-world"]},"rootDir":{"type":"string"},"slug":{"type":"string"},"suspended":{"type":"string","enum":["suspended","not_suspended"],"description":"`suspended` `not_suspended`"},"suspenders":{"type":"array","items":{"type":"string","enum":["admin","billing","user","parent_service","unknown"],"description":"`admin` `billing` `user` `parent_service` `unknown`"}},"type":{"type":"string","enum":["static_site","web_service","private_service","background_worker","cron_job"],"description":"`static_site` `web_service` `private_service` `background_worker` `cron_job`"},"updatedAt":{"type":"string","format":"date-time"},"serviceDetails":{"oneOf":[{"type":"object","required":["buildCommand","publishPath","pullRequestPreviewsEnabled","url","buildPlan"],"properties":{"buildCommand":{"type":"string"},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"publishPath":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["runtime","envSpecificDetails","plan","region","pullRequestPreviewsEnabled","numInstances","buildPlan","healthCheckPath","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"healthCheckPath":{"type":"string"},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["env","envSpecificDetails","plan","region","pullRequestPreviewsEnabled","numInstances","buildPlan","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["env","envSpecificDetails","plan","region","pullRequestPreviewsEnabled","numInstances","buildPlan"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"required":["env","envSpecificDetails","plan","region","schedule","buildPlan"],"type":"object","properties":{"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"lastSuccessfulRunAt":{"type":"string","format":"date-time"},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"schedule":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}}]}}},"deployId":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"402":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"409":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteCustomDomain = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"customDomainIdOrName":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID or name of the custom domain"}},"required":["serviceId","customDomainIdOrName"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteRegistryCredential = {"metadata":{"allOf":[{"type":"object","properties":{"registryCredentialId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the registry credential"}},"required":["registryCredentialId"]}]},"response":{"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteService = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetApplicationFilterValues = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Service ID to query. When multiple service ids are provided, they are ORed together"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of filter values for application metrics","required":["items"],"items":{"type":"object","properties":{"filter":{"type":"string","enum":["instance"],"description":"`instance`"},"values":{"type":"array","items":{"type":"string","examples":["srv-xxxxx-yyyy"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetBandwidth = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resource":{"type":"string","examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Service ID to query. When multiple service ids are provided, they are ORed together"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCpu = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"instance":{"type":"string","examples":["srv-xxxxx-yyyy"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Instance ID to query. When multiple instance ID query params are provided, they are ORed together"},"aggregationMethod":{"type":"string","enum":["AVG","MAX","MIN"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The aggregation method to apply to multiple time series"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCpuLimit = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"instance":{"type":"string","examples":["srv-xxxxx-yyyy"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Instance ID to query. When multiple instance ID query params are provided, they are ORed together"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCpuTarget = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"instance":{"type":"string","examples":["srv-xxxxx-yyyy"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Instance ID to query. When multiple instance ID query params are provided, they are ORed together"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomDomain = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"customDomainIdOrName":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID or name of the custom domain"}},"required":["serviceId","customDomainIdOrName"]}]},"response":{"200":{"type":"object","required":["id","name","domainType","publicSuffix","verificationStatus","createdAt","redirectForName"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"domainType":{"type":"string","enum":["apex","subdomain"],"description":"`apex` `subdomain`"},"publicSuffix":{"type":"string"},"redirectForName":{"type":"string"},"verificationStatus":{"type":"string","enum":["verified","unverified"],"description":"`verified` `unverified`"},"createdAt":{"type":"string","format":"date-time"},"server":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomDomains = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]},{"type":"object","properties":{"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Cursor to begin retrieving entries for this query"},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"Max number of items that can be returned","$schema":"http://json-schema.org/draft-04/schema#"},"name":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for the names of custom domain"},"domainType":{"type":"string","enum":["apex","subdomain"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for apex or subdomains"},"verificationStatus":{"type":"string","enum":["verified","unverified"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for verified or unverified custom domains"},"createdBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for custom domains created before a certain time (specified as an ISO 8601 timestamp)"},"createdAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for custom domains created after a certain time (specified as an ISO 8601 timestamp)"}},"required":[]}]},"response":{"200":{"type":"array","items":{"required":["disk","cursor"],"type":"object","properties":{"customDomain":{"type":"object","required":["id","name","domainType","publicSuffix","verificationStatus","createdAt","redirectForName"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"domainType":{"type":"string","enum":["apex","subdomain"],"description":"`apex` `subdomain`"},"publicSuffix":{"type":"string"},"redirectForName":{"type":"string"},"verificationStatus":{"type":"string","enum":["verified","unverified"],"description":"`verified` `unverified`"},"createdAt":{"type":"string","format":"date-time"},"server":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetDeploy = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"deployId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the deploy"}},"required":["serviceId","deployId"]}]},"response":{"200":{"type":"object","required":["id"],"properties":{"id":{"type":"string"},"commit":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"},"createdAt":{"type":"string","format":"date-time"}}},"image":{"description":"Image information used when creating the deploy. Not present for Git-backed deploys","type":"object","properties":{"ref":{"description":"Image reference used when creating the deploy","type":"string"},"sha":{"description":"SHA that the image reference was resolved to when creating the deploy","type":"string"},"registryCredential":{"description":"Name of credential used to pull the image, if provided","type":"string"}}},"status":{"type":"string","enum":["created","build_in_progress","update_in_progress","live","deactivated","build_failed","update_failed","canceled","pre_deploy_in_progress","pre_deploy_failed"],"description":"`created` `build_in_progress` `update_in_progress` `live` `deactivated` `build_failed` `update_failed` `canceled` `pre_deploy_in_progress` `pre_deploy_failed`"},"trigger":{"type":"string","enum":["api","blueprint_sync","deploy_hook","deployed_by_render","manual","other","new_commit","rollback","service_resumed","service_updated"],"description":"`api` `blueprint_sync` `deploy_hook` `deployed_by_render` `manual` `other` `new_commit` `rollback` `service_resumed` `service_updated`"},"finishedAt":{"type":"string","format":"date-time"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetDeploys = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]},{"type":"object","properties":{"createdBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for deploys created before a certain time (specified as an ISO 8601 timestamp)"},"createdAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for deploys created after a certain time (specified as an ISO 8601 timestamp)"},"updatedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for deploys updated before a certain time (specified as an ISO 8601 timestamp)"},"updatedAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for deploys updated after a certain time (specified as an ISO 8601 timestamp)"},"finishedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for deploys finished before a certain time (specified as an ISO 8601 timestamp)"},"finishedAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for deploys finished after a certain time (specified as an ISO 8601 timestamp)"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Cursor to begin retrieving entries for this query"},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"Max number of items that can be returned","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","properties":{"deploy":{"type":"object","required":["id"],"properties":{"id":{"type":"string"},"commit":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"},"createdAt":{"type":"string","format":"date-time"}}},"image":{"description":"Image information used when creating the deploy. Not present for Git-backed deploys","type":"object","properties":{"ref":{"description":"Image reference used when creating the deploy","type":"string"},"sha":{"description":"SHA that the image reference was resolved to when creating the deploy","type":"string"},"registryCredential":{"description":"Name of credential used to pull the image, if provided","type":"string"}}},"status":{"type":"string","enum":["created","build_in_progress","update_in_progress","live","deactivated","build_failed","update_failed","canceled","pre_deploy_in_progress","pre_deploy_failed"],"description":"`created` `build_in_progress` `update_in_progress` `live` `deactivated` `build_failed` `update_failed` `canceled` `pre_deploy_in_progress` `pre_deploy_failed`"},"trigger":{"type":"string","enum":["api","blueprint_sync","deploy_hook","deployed_by_render","manual","other","new_commit","rollback","service_resumed","service_updated"],"description":"`api` `blueprint_sync` `deploy_hook` `deployed_by_render` `manual` `other` `new_commit` `rollback` `service_resumed` `service_updated`"},"finishedAt":{"type":"string","format":"date-time"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetDiskCapacity = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetDiskUsage = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetEnvVarsForService = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]},{"type":"object","properties":{"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Cursor to begin retrieving entries for this query"},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"Max number of items that can be returned","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["envVar","cursor"],"properties":{"envVar":{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetHttpFilterValues = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Service ID to query. When multiple service ids are provided, they are ORed together"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"host":{"type":"string","examples":["example.com"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together"},"statusCode":{"type":"string","examples":[200],"$schema":"http://json-schema.org/draft-04/schema#","description":"The status codes of HTTP requests to filter to. When multiple status code query params are provided, they are ORed together"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of filter values for HTTP metrics","required":["items"],"items":{"type":"object","properties":{"filter":{"type":"string","enum":["host","statusCode"],"description":"`host` `statusCode`"},"values":{"type":"array","items":{"type":"string","examples":["api.example.com"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetHttpLatency = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Service ID to query. When multiple service ids are provided, they are ORed together"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"host":{"type":"string","examples":["example.com"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together"},"path":{"type":"string","examples":["/graphql"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The paths of HTTP requests to filter to. When multiple path query params are provided, they are ORed together"},"quantile":{"type":"number","format":"float","examples":[0.99],"minimum":-3.402823669209385e+38,"maximum":3.402823669209385e+38,"$schema":"http://json-schema.org/draft-04/schema#","description":"The quantile of latencies to fetch. When multiple quantile query params are provided, they are ORed together"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetHttpRequests = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Service ID to query. When multiple service ids are provided, they are ORed together"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"host":{"type":"string","examples":["example.com"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together"},"path":{"type":"string","examples":["/graphql"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The paths of HTTP requests to filter to. When multiple path query params are provided, they are ORed together"},"aggregateBy":{"type":"string","enum":["statusCode","host"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The field to aggregate by"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetInstanceCount = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetJob = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"jobId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the job"}},"required":["serviceId","jobId"]}]},"response":{"200":{"type":"object","required":["id","serviceId","startCommand","planId","createdAt"],"properties":{"id":{"type":"string","examples":["job-xxxxx"]},"serviceId":{"type":"string","examples":["srv-xxxxx"]},"startCommand":{"type":"string","examples":["echo 'hello world'"]},"planId":{"type":"string","examples":["plan-srv-004"]},"status":{"type":"string","examples":["succeeded"]},"createdAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"startedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"finishedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetMemory = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"instance":{"type":"string","examples":["srv-xxxxx-yyyy"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Instance ID to query. When multiple instance ID query params are provided, they are ORed together"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetMemoryLimit = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"instance":{"type":"string","examples":["srv-xxxxx-yyyy"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Instance ID to query. When multiple instance ID query params are provided, they are ORed together"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetMemoryTarget = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"instance":{"type":"string","examples":["srv-xxxxx-yyyy"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Instance ID to query. When multiple instance ID query params are provided, they are ORed together"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetOwner = {"metadata":{"allOf":[{"type":"object","properties":{"ownerId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the user or team"}},"required":["ownerId"]}]},"response":{"200":{"type":"object","required":["id","name","email","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"twoFactorAuthEnabled":{"type":"boolean","description":"Whether two-factor authentication is enabled for the owner. Only present for user owners."},"type":{"type":"string","enum":["user","team"],"description":"`user` `team`"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetOwners = {"metadata":{"allOf":[{"type":"object","properties":{"name":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#"},"email":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Cursor to begin retrieving entries for this query"},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"Max number of items that can be returned","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"properties":{"owner":{"type":"object","required":["id","name","email","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"twoFactorAuthEnabled":{"type":"boolean","description":"Whether two-factor authentication is enabled for the owner. Only present for user owners."},"type":{"type":"string","enum":["user","team"],"description":"`user` `team`"}}},"cursor":{"type":"string"}},"type":"object"},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetPathFilterValues = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Service ID to query. When multiple service ids are provided, they are ORed together"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"host":{"type":"string","examples":["example.com"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together"},"statusCode":{"type":"string","examples":[200],"$schema":"http://json-schema.org/draft-04/schema#","description":"The status codes of HTTP requests to filter to. When multiple status code query params are provided, they are ORed together"},"path":{"type":"string","examples":["/graphql"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The paths of HTTP requests to filter to. When multiple path query params are provided, they are ORed together"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of suggested paths to filter by","required":["items"],"items":{"type":"string","examples":["/user/*"]},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetRegistryCredentials = {"metadata":{"allOf":[{"type":"object","properties":{"name":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for the name of a credential"},"username":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for the username of a credential"},"type":{"type":"array","items":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for the registry type for the credential"},"createdBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for services created before a certain time (specified as an ISO 8601 timestamp)"},"createdAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for services created after a certain time (specified as an ISO 8601 timestamp)"},"updatedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for services updated before a certain time (specified as an ISO 8601 timestamp)"},"updatedAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for services updated after a certain time (specified as an ISO 8601 timestamp)"},"ownerId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Cursor to begin retrieving entries for this query"},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"Max number of items that can be returned","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetRegistrycredentialsRegistrycredentialid = {"metadata":{"allOf":[{"type":"object","properties":{"registryCredentialId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the registry credential"}},"required":["registryCredentialId"]}]},"response":{"200":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetService = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"200":{"type":"object","required":["id","name","ownerId","type","createdAt","updatedAt","suspended","suspenders","autoDeploy","notifyOnFail","slug","serviceDetails","rootDir"],"properties":{"id":{"type":"string"},"autoDeploy":{"type":"string","enum":["yes","no"],"default":"yes","description":"`yes` `no`"},"branch":{"type":"string"},"buildFilter":{"type":"object","required":["paths","ignoredPaths"],"properties":{"paths":{"type":"array","items":{"type":"string"}},"ignoredPaths":{"type":"array","items":{"type":"string"}}}},"createdAt":{"type":"string","format":"date-time"},"environmentId":{"type":"string"},"imagePath":{"type":"string"},"name":{"type":"string"},"notifyOnFail":{"type":"string","enum":["default","notify","ignore"],"description":"`default` `notify` `ignore`"},"ownerId":{"type":"string"},"registryCredential":{"type":"object","required":["id","name"],"properties":{"id":{"type":"string"},"name":{"type":"string"}}},"repo":{"type":"string","examples":["https://github.com/render-examples/flask-hello-world"]},"rootDir":{"type":"string"},"slug":{"type":"string"},"suspended":{"type":"string","enum":["suspended","not_suspended"],"description":"`suspended` `not_suspended`"},"suspenders":{"type":"array","items":{"type":"string","enum":["admin","billing","user","parent_service","unknown"],"description":"`admin` `billing` `user` `parent_service` `unknown`"}},"type":{"type":"string","enum":["static_site","web_service","private_service","background_worker","cron_job"],"description":"`static_site` `web_service` `private_service` `background_worker` `cron_job`"},"updatedAt":{"type":"string","format":"date-time"},"serviceDetails":{"oneOf":[{"type":"object","required":["buildCommand","publishPath","pullRequestPreviewsEnabled","url","buildPlan"],"properties":{"buildCommand":{"type":"string"},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"publishPath":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["runtime","envSpecificDetails","plan","region","pullRequestPreviewsEnabled","numInstances","buildPlan","healthCheckPath","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"healthCheckPath":{"type":"string"},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["env","envSpecificDetails","plan","region","pullRequestPreviewsEnabled","numInstances","buildPlan","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["env","envSpecificDetails","plan","region","pullRequestPreviewsEnabled","numInstances","buildPlan"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"required":["env","envSpecificDetails","plan","region","schedule","buildPlan"],"type":"object","properties":{"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"lastSuccessfulRunAt":{"type":"string","format":"date-time"},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"schedule":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}}]}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetServices = {"metadata":{"allOf":[{"type":"object","properties":{"name":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter by resource name"},"type":{"type":"array","items":{"type":"string","enum":["static_site","web_service","private_service","background_worker","cron_job"]},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for types of services"},"env":{"type":"array","items":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for environments (runtimes) of services"},"region":{"type":"array","items":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\nDefault: `oregon`"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter by resource region"},"suspended":{"type":"array","items":{"type":"string","enum":["suspended","not_suspended"]},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter resources based on whether they're suspended or not suspended"},"createdBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources created before a certain time (specified as an ISO 8601 timestamp)"},"createdAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources created after a certain time (specified as an ISO 8601 timestamp)"},"updatedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)"},"updatedAfter":{"type":"string","format":"date-time","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)"},"ownerId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Cursor to begin retrieving entries for this query"},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"Max number of items that can be returned","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","properties":{"service":{"type":"object","required":["id","name","ownerId","type","createdAt","updatedAt","suspended","suspenders","autoDeploy","notifyOnFail","slug","serviceDetails","rootDir"],"properties":{"id":{"type":"string"},"autoDeploy":{"type":"string","enum":["yes","no"],"default":"yes","description":"`yes` `no`"},"branch":{"type":"string"},"buildFilter":{"type":"object","required":["paths","ignoredPaths"],"properties":{"paths":{"type":"array","items":{"type":"string"}},"ignoredPaths":{"type":"array","items":{"type":"string"}}}},"createdAt":{"type":"string","format":"date-time"},"environmentId":{"type":"string"},"imagePath":{"type":"string"},"name":{"type":"string"},"notifyOnFail":{"type":"string","enum":["default","notify","ignore"],"description":"`default` `notify` `ignore`"},"ownerId":{"type":"string"},"registryCredential":{"type":"object","required":["id","name"],"properties":{"id":{"type":"string"},"name":{"type":"string"}}},"repo":{"type":"string","examples":["https://github.com/render-examples/flask-hello-world"]},"rootDir":{"type":"string"},"slug":{"type":"string"},"suspended":{"type":"string","enum":["suspended","not_suspended"],"description":"`suspended` `not_suspended`"},"suspenders":{"type":"array","items":{"type":"string","enum":["admin","billing","user","parent_service","unknown"],"description":"`admin` `billing` `user` `parent_service` `unknown`"}},"type":{"type":"string","enum":["static_site","web_service","private_service","background_worker","cron_job"],"description":"`static_site` `web_service` `private_service` `background_worker` `cron_job`"},"updatedAt":{"type":"string","format":"date-time"},"serviceDetails":{"oneOf":[{"type":"object","required":["buildCommand","publishPath","pullRequestPreviewsEnabled","url","buildPlan"],"properties":{"buildCommand":{"type":"string"},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"publishPath":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["runtime","envSpecificDetails","plan","region","pullRequestPreviewsEnabled","numInstances","buildPlan","healthCheckPath","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"healthCheckPath":{"type":"string"},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["env","envSpecificDetails","plan","region","pullRequestPreviewsEnabled","numInstances","buildPlan","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["env","envSpecificDetails","plan","region","pullRequestPreviewsEnabled","numInstances","buildPlan"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"required":["env","envSpecificDetails","plan","region","schedule","buildPlan"],"type":"object","properties":{"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"lastSuccessfulRunAt":{"type":"string","format":"date-time"},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"schedule":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}}]}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListJob = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]},{"type":"object","properties":{"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Cursor to begin retrieving entries for this query"},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"Max number of items that can be returned","$schema":"http://json-schema.org/draft-04/schema#"},"status":{"type":"array","items":{"type":"string","enum":["pending","running","succeeded","failed"]},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for the status of the job (`pending`, `running`, `succeeded`, or `failed`)"},"createdBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for jobs created before a certain time (specified as an ISO 8601 timestamp)"},"createdAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for jobs created after a certain time (specified as an ISO 8601 timestamp)"},"startedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for jobs started before a certain time (specified as an ISO 8601 timestamp)"},"startedAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for jobs started after a certain time (specified as an ISO 8601 timestamp)"},"finishedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for jobs finished before a certain time (specified as an ISO 8601 timestamp)"},"finishedAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for jobs finished after a certain time (specified as an ISO 8601 timestamp)"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","properties":{"job":{"type":"object","required":["id","serviceId","startCommand","planId","createdAt"],"properties":{"id":{"type":"string","examples":["job-xxxxx"]},"serviceId":{"type":"string","examples":["srv-xxxxx"]},"startCommand":{"type":"string","examples":["echo 'hello world'"]},"planId":{"type":"string","examples":["plan-srv-004"]},"status":{"type":"string","examples":["succeeded"]},"createdAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"startedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"finishedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostJob = {"body":{"type":"object","required":["startCommand"],"properties":{"startCommand":{"type":"string"},"planId":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"200":{"type":"object","required":["id","serviceId","startCommand","planId","createdAt"],"properties":{"id":{"type":"string","examples":["job-xxxxx"]},"serviceId":{"type":"string","examples":["srv-xxxxx"]},"startCommand":{"type":"string","examples":["echo 'hello world'"]},"planId":{"type":"string","examples":["plan-srv-004"]},"status":{"type":"string","examples":["succeeded"]},"createdAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"startedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"finishedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PreviewService = {"body":{"type":"object","required":["imagePath"],"properties":{"imagePath":{"type":"string","description":"Must be either a full URL or the relative path to an image. If a relative path, Render uses the base service's image URL as its root. For example, if the base service's image URL is `docker.io/library/nginx:latest`, then valid values are: `docker.io/library/nginx:<any tag or SHA>`, `library/nginx:<any tag or SHA>`, or `nginx:<any tag or SHA>`. Note that the path must match (only the tag or SHA can vary).","examples":["docker.io/library/nginx:latest"]},"name":{"type":"string","description":"A name for the service preview instance. If not specified, Render generates the name using the base service's name and the specified tag or SHA.","examples":["preview"]},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.","examples":["starter"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"200":{"type":"object","properties":{"service":{"type":"object","required":["id","name","ownerId","type","createdAt","updatedAt","suspended","suspenders","autoDeploy","notifyOnFail","slug","serviceDetails","rootDir"],"properties":{"id":{"type":"string"},"autoDeploy":{"type":"string","enum":["yes","no"],"default":"yes","description":"`yes` `no`"},"branch":{"type":"string"},"buildFilter":{"type":"object","required":["paths","ignoredPaths"],"properties":{"paths":{"type":"array","items":{"type":"string"}},"ignoredPaths":{"type":"array","items":{"type":"string"}}}},"createdAt":{"type":"string","format":"date-time"},"environmentId":{"type":"string"},"imagePath":{"type":"string"},"name":{"type":"string"},"notifyOnFail":{"type":"string","enum":["default","notify","ignore"],"description":"`default` `notify` `ignore`"},"ownerId":{"type":"string"},"registryCredential":{"type":"object","required":["id","name"],"properties":{"id":{"type":"string"},"name":{"type":"string"}}},"repo":{"type":"string","examples":["https://github.com/render-examples/flask-hello-world"]},"rootDir":{"type":"string"},"slug":{"type":"string"},"suspended":{"type":"string","enum":["suspended","not_suspended"],"description":"`suspended` `not_suspended`"},"suspenders":{"type":"array","items":{"type":"string","enum":["admin","billing","user","parent_service","unknown"],"description":"`admin` `billing` `user` `parent_service` `unknown`"}},"type":{"type":"string","enum":["static_site","web_service","private_service","background_worker","cron_job"],"description":"`static_site` `web_service` `private_service` `background_worker` `cron_job`"},"updatedAt":{"type":"string","format":"date-time"},"serviceDetails":{"oneOf":[{"type":"object","required":["buildCommand","publishPath","pullRequestPreviewsEnabled","url","buildPlan"],"properties":{"buildCommand":{"type":"string"},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"publishPath":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["runtime","envSpecificDetails","plan","region","pullRequestPreviewsEnabled","numInstances","buildPlan","healthCheckPath","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"healthCheckPath":{"type":"string"},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["env","envSpecificDetails","plan","region","pullRequestPreviewsEnabled","numInstances","buildPlan","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["env","envSpecificDetails","plan","region","pullRequestPreviewsEnabled","numInstances","buildPlan"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"required":["env","envSpecificDetails","plan","region","schedule","buildPlan"],"type":"object","properties":{"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"lastSuccessfulRunAt":{"type":"string","format":"date-time"},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"schedule":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}}]}}},"deployId":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RefreshCustomDomain = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"customDomainIdOrName":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID or name of the custom domain"}},"required":["serviceId","customDomainIdOrName"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RestartServer = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ResumeService = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveHeaders = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]},{"type":"object","properties":{"path":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for specific paths that headers apply to"},"name":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for header names"},"value":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for header values"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Cursor to begin retrieving entries for this query"},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"Max number of items that can be returned","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["header","cursor"],"properties":{"header":{"type":"object","required":["id","path","name","value"],"properties":{"id":{"type":"string"},"path":{"type":"string"},"name":{"type":"string"},"value":{"type":"string"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveRoutes = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]},{"type":"object","properties":{"type":{"type":"array","items":{"type":"string","enum":["redirect","rewrite"]},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for the type of route rule"},"source":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for the source path of the route"},"destination":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for the destination path of the route"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Cursor to begin retrieving entries for this query"},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"Max number of items that can be returned","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["route","cursor"],"properties":{"route":{"type":"object","required":["id","type","source","destination","priority"],"properties":{"id":{"type":"string"},"type":{"type":"string","enum":["redirect","rewrite"],"description":"`redirect` `rewrite`"},"source":{"type":"string"},"destination":{"type":"string"},"priority":{"type":"integer","description":"Redirect and Rewrite Rules are applied in priority order starting at 0"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RollbackDeploy = {"body":{"type":"object","required":["deployId"],"properties":{"deployId":{"type":"string","description":"The ID of the deploy to rollback to"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"201":{"type":"object","required":["id"],"properties":{"id":{"type":"string"},"commit":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"},"createdAt":{"type":"string","format":"date-time"}}},"image":{"description":"Image information used when creating the deploy. Not present for Git-backed deploys","type":"object","properties":{"ref":{"description":"Image reference used when creating the deploy","type":"string"},"sha":{"description":"SHA that the image reference was resolved to when creating the deploy","type":"string"},"registryCredential":{"description":"Name of credential used to pull the image, if provided","type":"string"}}},"status":{"type":"string","enum":["created","build_in_progress","update_in_progress","live","deactivated","build_failed","update_failed","canceled","pre_deploy_in_progress","pre_deploy_failed"],"description":"`created` `build_in_progress` `update_in_progress` `live` `deactivated` `build_failed` `update_failed` `canceled` `pre_deploy_in_progress` `pre_deploy_failed`"},"trigger":{"type":"string","enum":["api","blueprint_sync","deploy_hook","deployed_by_render","manual","other","new_commit","rollback","service_resumed","service_updated"],"description":"`api` `blueprint_sync` `deploy_hook` `deployed_by_render` `manual` `other` `new_commit` `rollback` `service_resumed` `service_updated`"},"finishedAt":{"type":"string","format":"date-time"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ScaleService = {"body":{"type":"object","required":["numInstances"],"properties":{"numInstances":{"type":"integer","examples":[3]}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const SuspendService = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateEnvVarsForService = {"body":{"type":"array","items":{"type":"object","oneOf":[{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}}},{"type":"object","required":["key","generateValue"],"properties":{"key":{"type":"string"},"generateValue":{"type":"boolean"}}}]},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["envVar","cursor"],"properties":{"envVar":{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateRegistryCredential = {"body":{"type":"object","required":["name","registry","username","authToken"],"properties":{"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with"},"name":{"type":"string"},"username":{"type":"string"},"authToken":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"registryCredentialId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the registry credential"}},"required":["registryCredentialId"]}]},"response":{"200":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"402":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"409":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateService = {"body":{"type":"object","properties":{"autoDeploy":{"type":"string","enum":["yes","no"],"default":"yes","description":"Default: yes"},"repo":{"type":"string"},"branch":{"type":"string"},"image":{"type":"object","required":["imagePath","ownerId"],"properties":{"ownerId":{"type":"string","description":"The ID of the owner for this image. This should match the owner of the service as well as the owner of any specified registry credential."},"registryCredentialId":{"type":"string","description":"Optional reference to the registry credential passed to the image repository to retrieve this image."},"imagePath":{"type":"string","description":"Path to the image used for this server (e.g docker.io/library/nginx:latest)."}}},"name":{"type":"string"},"buildFilter":{"type":"object","required":["paths","ignoredPaths"],"properties":{"paths":{"type":"array","items":{"type":"string"}},"ignoredPaths":{"type":"array","items":{"type":"string"}}}},"rootDir":{"type":"string"},"serviceDetails":{"oneOf":[{"type":"object","properties":{"buildCommand":{"type":"string"},"publishPath":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"]}}},{"type":"object","properties":{"envSpecificDetails":{"oneOf":[{"type":"object","properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"registryCredentialId":{"type":"string"}}},{"type":"object","properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"}}}]},"healthCheckPath":{"type":"string"},"plan":{"type":"string","enum":["starter","standard","pro","pro_plus","pro_max","pro_ultra"],"default":"starter","description":"Defaults to \"starter\"\n\nDefault: `starter`"},"preDeployCommand":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"]},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"}}},{"type":"object","properties":{"envSpecificDetails":{"oneOf":[{"type":"object","properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"registryCredentialId":{"type":"string"}}},{"type":"object","properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"}}}]},"plan":{"type":"string","enum":["starter","standard","pro","pro_plus","pro_max","pro_ultra"],"default":"starter","description":"Defaults to \"starter\"\n\nDefault: `starter`"},"preDeployCommand":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"]},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"}}},{"type":"object","properties":{"envSpecificDetails":{"oneOf":[{"type":"object","properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"registryCredentialId":{"type":"string"}}},{"type":"object","properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"}}}]},"plan":{"type":"string","enum":["starter","standard","pro","pro_plus","pro_max","pro_ultra"],"default":"starter","description":"Defaults to \"starter\"\n\nDefault: `starter`"},"preDeployCommand":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"]},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"}}},{"type":"object","properties":{"envSpecificDetails":{"oneOf":[{"type":"object","properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"registryCredentialId":{"type":"string"}}},{"type":"object","properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"}}}]},"plan":{"type":"string","enum":["starter","standard","pro","pro_plus","pro_max","pro_ultra"],"default":"starter","description":"Defaults to \"starter\"\n\nDefault: `starter`"},"schedule":{"type":"string"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"}}}]}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"200":{"type":"object","required":["id","name","ownerId","type","createdAt","updatedAt","suspended","suspenders","autoDeploy","notifyOnFail","slug","serviceDetails","rootDir"],"properties":{"id":{"type":"string"},"autoDeploy":{"type":"string","enum":["yes","no"],"default":"yes","description":"`yes` `no`"},"branch":{"type":"string"},"buildFilter":{"type":"object","required":["paths","ignoredPaths"],"properties":{"paths":{"type":"array","items":{"type":"string"}},"ignoredPaths":{"type":"array","items":{"type":"string"}}}},"createdAt":{"type":"string","format":"date-time"},"environmentId":{"type":"string"},"imagePath":{"type":"string"},"name":{"type":"string"},"notifyOnFail":{"type":"string","enum":["default","notify","ignore"],"description":"`default` `notify` `ignore`"},"ownerId":{"type":"string"},"registryCredential":{"type":"object","required":["id","name"],"properties":{"id":{"type":"string"},"name":{"type":"string"}}},"repo":{"type":"string","examples":["https://github.com/render-examples/flask-hello-world"]},"rootDir":{"type":"string"},"slug":{"type":"string"},"suspended":{"type":"string","enum":["suspended","not_suspended"],"description":"`suspended` `not_suspended`"},"suspenders":{"type":"array","items":{"type":"string","enum":["admin","billing","user","parent_service","unknown"],"description":"`admin` `billing` `user` `parent_service` `unknown`"}},"type":{"type":"string","enum":["static_site","web_service","private_service","background_worker","cron_job"],"description":"`static_site` `web_service` `private_service` `background_worker` `cron_job`"},"updatedAt":{"type":"string","format":"date-time"},"serviceDetails":{"oneOf":[{"type":"object","required":["buildCommand","publishPath","pullRequestPreviewsEnabled","url","buildPlan"],"properties":{"buildCommand":{"type":"string"},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"publishPath":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["runtime","envSpecificDetails","plan","region","pullRequestPreviewsEnabled","numInstances","buildPlan","healthCheckPath","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"healthCheckPath":{"type":"string"},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["env","envSpecificDetails","plan","region","pullRequestPreviewsEnabled","numInstances","buildPlan","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["env","envSpecificDetails","plan","region","pullRequestPreviewsEnabled","numInstances","buildPlan"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"description":"`yes` `no`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"required":["env","envSpecificDetails","plan","region","schedule","buildPlan"],"type":"object","properties":{"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT`"},"username":{"type":"string","description":"The username associated with the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"lastSuccessfulRunAt":{"type":"string","format":"date-time"},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore`"},"schedule":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}}]}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"402":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"409":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
export { AutoscaleService, CancelDeploy, CancelJob, CreateCustomDomain, CreateDeploy, CreateRegistryCredential, CreateService, DeleteCustomDomain, DeleteRegistryCredential, DeleteService, GetApplicationFilterValues, GetBandwidth, GetCpu, GetCpuLimit, GetCpuTarget, GetCustomDomain, GetCustomDomains, GetDeploy, GetDeploys, GetDiskCapacity, GetDiskUsage, GetEnvVarsForService, GetHttpFilterValues, GetHttpLatency, GetHttpRequests, GetInstanceCount, GetJob, GetMemory, GetMemoryLimit, GetMemoryTarget, GetOwner, GetOwners, GetPathFilterValues, GetRegistryCredentials, GetRegistrycredentialsRegistrycredentialid, GetService, GetServices, ListJob, PostJob, PreviewService, RefreshCustomDomain, RestartServer, ResumeService, RetrieveHeaders, RetrieveRoutes, RollbackDeploy, ScaleService, SuspendService, UpdateEnvVarsForService, UpdateRegistryCredential, UpdateService }
